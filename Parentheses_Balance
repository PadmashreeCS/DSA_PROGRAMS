#include <stdio.h>
#include <string.h>
#define SIZE 100

char stack[SIZE];
int top = -1;

void push(char ch) 
{
    if (top < SIZE - 1)
    {
        stack[++top] = ch;
    } else {
        printf("Stack overflow!\n");
    }
}

char pop()
{
    if (top >= 0) 
    {
        return stack[top--];
    } else
    {
        return '\0';  
    }
}

int isMatchingPair(char open, char close) 
{
    return (open == '(' && close == ')') ||
           (open == '{' && close == '}') ||
           (open == '[' && close == ']');
}

int main() 
{
    char input[SIZE];
    printf("Enter the parentheses: ");
    scanf("%s", input);

    for (int i = 0; i < strlen(input); i++) 
    {
        char ch = input[i];

        if (ch == '(' || ch == '{' || ch == '[') 
        {
            push(ch);
        } 
        else if (ch == ')' || ch == '}' || ch == ']')
        {
            char open = pop();
            if (!isMatchingPair(open, ch))
            {
                printf("Not Balanced\n");
                return 0; // to exit from main method, no need to check other again
            }
        }
    }

    if (top == -1) 
    {
        printf("Balanced\n");
    } 
    else 
    {
        printf("Not Balanced\n");
    }

    return 0;
}
